(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[[nil nil #62=(headline (:raw-value #1="Smartparens-python" :begin 108 :end 134 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 1 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face (org-todo org-level-1) fontified t)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 108 :title #1# :mode nil :granularity element :cached t :parent #4=(org-data (:begin 1 :contents-begin 1 :contents-end 30844 :end 30845 :robust-begin 3 :robust-end 30842 :post-blank 1 :post-affiliated 1 :path "/home/luis/.emacs.d/Init.org" :mode org-data :CATEGORY "Init" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #64=(headline (:raw-value #2="Performance" :begin 531 :end 1988 :pre-blank 1 :contents-begin 547 :contents-end 1987 :robust-begin 549 :robust-end 1985 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 531 :title #2# :mode section :granularity element :cached t :parent #5=(headline (:raw-value #3="Startup" :begin 521 :end 2121 :pre-blank 0 :contents-begin 531 :contents-end 2121 :robust-begin 533 :robust-end 2119 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 521 :title #3# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #5# 0] [[nil nil #9=(headline (:raw-value #6="Package management" :begin 2121 :end 3262 :pre-blank 0 :contents-begin 2142 :contents-end 3261 :robust-begin 2144 :robust-end 3259 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2121 :title #6# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [nil nil #12=(headline (:raw-value #7="Keybinding configuration" :begin 3262 :end 6848 :pre-blank 0 :contents-begin 3289 :contents-end 6847 :robust-begin 3291 :robust-end 6845 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3262 :title #7# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #68=(headline (:raw-value #8="Straight and use-package" :begin 2142 :end 3262 :pre-blank 0 :contents-begin 2170 :contents-end 3261 :robust-begin 2172 :robust-end 3259 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2142 :title #8# :mode section :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) 0] #66=(headline (:raw-value #10="Start config" :begin 1988 :end 2121 :pre-blank 0 :contents-begin 2004 :contents-end 2121 :robust-begin 2006 :robust-end 2119 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1988 :title #10# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] [[[nil nil #72=(headline (:raw-value #11="Fly-keys" :begin 3798 :end 6848 :pre-blank 0 :contents-begin 3810 :contents-end 6847 :robust-begin 3812 :robust-end 6845 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3798 :title #11# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [nil nil #74=(headline (:raw-value #13="General improvements" :begin 6864 :end 7447 :pre-blank 1 :contents-begin 6889 :contents-end 7447 :robust-begin 6891 :robust-end 7445 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6864 :title #13# :mode section :granularity element :cached t :parent #15=(headline (:raw-value #14="Basic editing" :begin 6848 :end 8559 :pre-blank 0 :contents-begin 6864 :contents-end 8558 :robust-begin 6866 :robust-end 8556 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6848 :title #14# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #15# 0] [[nil nil #18=(headline (:raw-value #16="UI Configuration" :begin 8559 :end 16416 :pre-blank 0 :contents-begin 8578 :contents-end 16415 :robust-begin 8580 :robust-end 16413 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8559 :title #16# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [nil nil #79=(headline (:raw-value #17="Font Configuration" :begin 9320 :end 10289 :pre-blank 1 :contents-begin 9343 :contents-end 10289 :robust-begin 9345 :robust-end 10287 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9320 :title #17# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] #78=(headline (:raw-value #19="Basic configuration" :begin 8578 :end 9320 :pre-blank 0 :contents-begin 8601 :contents-end 9319 :robust-begin 8603 :robust-end 9317 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8578 :title #19# :mode section :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] #75=(headline (:raw-value #20="Smartparens" :begin 7447 :end 8559 :pre-blank 0 :contents-begin 7462 :contents-end 8558 :robust-begin 7464 :robust-end 8556 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7447 :title #20# :mode nil :granularity element :cached t :parent #15# :org-element--cache-sync-key nil)) 0] #70=(headline (:raw-value #21="Extra functions" :begin 3289 :end 3798 :pre-blank 1 :contents-begin 3309 :contents-end 3797 :robust-begin 3311 :robust-end 3795 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3289 :title #21# :mode section :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [[[[nil nil #24=(headline (:raw-value #22="Faces" :begin 10788 :end 11710 :pre-blank 0 :contents-begin 10797 :contents-end 11709 :robust-begin 10799 :robust-end 11707 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10788 :title #22# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [nil nil #86=(headline (:raw-value #23="Switch cursor color when switching mode" :begin 11372 :end 11710 :pre-blank 0 :contents-begin 11416 :contents-end 11709 :robust-begin 11418 :robust-end 11707 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11372 :title #23# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #84=(headline (:raw-value #25="Rainbow Delimiters" :begin 10797 :end 11372 :pre-blank 1 :contents-begin 10821 :contents-end 11372 :robust-begin 10823 :robust-end 11370 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10797 :title #25# :mode section :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] [[nil nil #90=(headline (:raw-value #26="Which Key" :begin 12588 :end 13300 :pre-blank 1 :contents-begin 12602 :contents-end 13299 :robust-begin 12604 :robust-end 13297 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12588 :title #26# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [nil nil #93=(headline (:raw-value #27="Improved Candidate Sorting with prescient.el" :begin 14313 :end 14927 :pre-blank 1 :contents-begin 14363 :contents-end 14926 :robust-begin 14365 :robust-end 14924 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14313 :title #27# :mode nil :granularity element :cached t :parent #29=(headline (:raw-value #28="Ivy and Counsel" :begin 13300 :end 14927 :pre-blank 1 :contents-begin 13320 :contents-end 14926 :robust-begin 13322 :robust-end 14924 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13300 :title #28# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #29# 0] #87=(headline (:raw-value #30="Better Modeline" :begin 11710 :end 12588 :pre-blank 1 :contents-begin 11730 :contents-end 12587 :robust-begin 11732 :robust-end 12585 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11710 :title #30# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [[[nil nil #97=(headline (:raw-value #31="Highlight indentation" :begin 15759 :end 16119 :pre-blank 0 :contents-begin 15784 :contents-end 16118 :robust-begin 15786 :robust-end 16116 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15759 :title #31# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [nil nil #35=(headline (:raw-value #32="Org Mode" :begin 16416 :end 21695 :pre-blank 1 :contents-begin 16428 :contents-end 21695 :robust-begin 16430 :robust-end 21693 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16416 :title #32# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #99=(headline (:raw-value #33="Dont kill scratch buffer" :begin 16119 :end 16416 :pre-blank 0 :contents-begin 16147 :contents-end 16415 :robust-begin 16149 :robust-end 16413 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16119 :title #33# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [[nil nil #102=(headline (:raw-value #34="Custom functions" :begin 18720 :end 18928 :pre-blank 0 :contents-begin 18740 :contents-end 18927 :robust-begin 18742 :robust-end 18925 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18720 :title #34# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] [nil nil #105=(headline (:raw-value #36="Nicer Heading Bullets" :begin 19693 :end 20151 :pre-blank 1 :contents-begin 19720 :contents-end 20151 :robust-begin 19722 :robust-end 20149 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19693 :title #36# :mode nil :granularity element :cached t :parent #38=(headline (:raw-value #37="Basic Config" :begin 18928 :end 20151 :pre-blank 1 :contents-begin 18945 :contents-end 20151 :robust-begin 18947 :robust-end 20149 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18928 :title #37# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #38# 0] #101=(headline (:raw-value #39="Better Font Faces" :begin 16611 :end 18720 :pre-blank 1 :contents-begin 16633 :contents-end 18719 :robust-begin 16635 :robust-end 18717 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16611 :title #39# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] #95=(headline (:raw-value #40="Helpful" :begin 14927 :end 15759 :pre-blank 1 :contents-begin 14939 :contents-end 15758 :robust-begin 14941 :robust-end 15756 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14927 :title #40# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] #81=(headline (:raw-value #41="Color Theme" :begin 10289 :end 10788 :pre-blank 1 :contents-begin 10305 :contents-end 10788 :robust-begin 10307 :robust-end 10786 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10289 :title #41# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [[[[nil nil #109=(headline (:raw-value #42="Auto-tangle Configuration Files" :begin 20704 :end 21564 :pre-blank 1 :contents-begin 20740 :contents-end 21564 :robust-begin 20742 :robust-end 21562 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 20704 :title #42# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] [nil nil #46=(headline (:raw-value #43="File Management" :begin 21695 :end 23201 :pre-blank 0 :contents-begin 21713 :contents-end 23200 :robust-begin 21715 :robust-end 23198 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21695 :title #43# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #111=(headline (:raw-value #44="Other" :begin 21564 :end 21695 :pre-blank 0 :contents-begin 21573 :contents-end 21695 :robust-begin 21575 :robust-end 21693 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21564 :title #44# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] [[nil nil #116=(headline (:raw-value #45="Keep Folders Clean" :begin 22287 :end 23201 :pre-blank 0 :contents-begin 22309 :contents-end 23200 :robust-begin 22311 :robust-end 23198 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22287 :title #45# :mode nil :granularity element :cached t :parent #46# :org-element--cache-sync-key nil)) 0] [nil nil #120=(headline (:raw-value #47="Runtime Performance" :begin 23525 :end 23783 :pre-blank 0 :contents-begin 23547 :contents-end 23782 :robust-begin 23549 :robust-end 23780 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23525 :title #47# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #118=(headline (:raw-value #48="Snippets" :begin 23201 :end 23525 :pre-blank 0 :contents-begin 23212 :contents-end 23525 :robust-begin 23214 :robust-end 23523 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23201 :title #48# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #114=(headline (:raw-value #49="Dired" :begin 21713 :end 22287 :pre-blank 0 :contents-begin 21722 :contents-end 22286 :robust-begin 21724 :robust-end 22284 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21713 :title #49# :mode section :granularity element :cached t :parent #46# :org-element--cache-sync-key nil)) 0] [[[nil nil #122=(headline (:raw-value #50="Syntax checking" :begin 23797 :end 24206 :pre-blank 0 :contents-begin 23816 :contents-end 24205 :robust-begin 23818 :robust-end 24203 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23797 :title #50# :mode section :granularity element :cached t :parent #53=(headline (:raw-value #51="Development" :begin 23783 :end 30845 :pre-blank 0 :contents-begin 23797 :contents-end 30844 :robust-begin 23799 :robust-end 30842 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23783 :title #51# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] nil #55=(headline (:raw-value #52="Languages" :begin 24206 :end 29470 :pre-blank 0 :contents-begin 24219 :contents-end 29469 :robust-begin 24221 :robust-end 29467 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24206 :title #52# :mode nil :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) -1] [[[nil nil #126=(headline (:raw-value #54="LaTeX" :begin 26890 :end 29372 :pre-blank 0 :contents-begin 26900 :contents-end 29372 :robust-begin 26902 :robust-end 29370 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 26890 :title #54# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #55#)) 0] nil #128=(headline (:raw-value #56="R" :begin 29372 :end 29470 :pre-blank 0 :contents-begin 29378 :contents-end 29469 :robust-begin 29380 :robust-end 29467 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29372 :title #56# :mode nil :granularity element :cached t :parent #55# :org-element--cache-sync-key nil)) -1] [nil [nil nil #134=(headline (:raw-value #57="Pdf view" :begin 30656 :end 30845 :pre-blank 0 :contents-begin 30668 :contents-end 30844 :robust-begin 30670 :robust-end 30842 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 30656 :title #57# :mode nil :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) 0] #132=(headline (:raw-value #58="Magit" :begin 30304 :end 30656 :pre-blank 1 :contents-begin 30314 :contents-end 30655 :robust-begin 30316 :robust-end 30653 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 30304 :title #58# :mode nil :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) 1] #130=(headline (:raw-value #59="Company Mode" :begin 29470 :end 30304 :pre-blank 1 :contents-begin 29487 :contents-end 30303 :robust-begin 29489 :robust-end 30301 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29470 :title #59# :mode nil :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) 0] #124=(headline #60=(:raw-value "Python" :begin 24219 :end 26890 :pre-blank 0 :contents-begin 24230 :contents-end 26890 :robust-begin 24232 :robust-end 26888 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24219 :title (#("Python" 0 6 (:parent (headline #60#)))) :parent #55# :cached t :org-element--cache-sync-key nil)) 1] #53# 1] #107=(headline (:raw-value #61="Configure Babel Languages" :begin 20151 :end 20704 :pre-blank 1 :contents-begin 20181 :contents-end 20703 :robust-begin 20183 :robust-end 20701 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 20151 :title #61# :mode nil :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[nil nil #4# 0] [[nil nil (keyword (:key "TITLE" :value "Emacs From Scratch Configuration" :begin 1 :end 43 :post-blank 0 :post-affiliated 1 :mode top-comment :granularity element :org-element--cache-sync-key nil :cached t :parent #63=(section (:begin 1 :end 108 :contents-begin 1 :contents-end 108 :robust-begin 1 :robust-end 106 :post-blank 0 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)))) 0] nil #62# -1] #63# 1] [[nil nil #64# 0] [nil nil (paragraph (:begin 547 :end 728 :contents-begin 547 :contents-end 727 :post-blank 1 :post-affiliated 547 :mode planning :granularity element :cached t :parent #65=(section (:begin 547 :end 1988 :contents-begin 547 :contents-end 1987 :robust-begin 547 :robust-end 1985 :post-blank 1 :post-affiliated 547 :mode section :granularity element :cached t :parent #64# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #65# 0] #5# -1] [[[nil nil #66# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2004 :end 2121 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(add-to-list 'initial-frame-alist '(fullscreen . maximized)) ;; start in fullscreen\12" :post-blank 0 :post-affiliated 2004 :mode planning :granularity element :cached t :parent #67=(section (:begin 2004 :end 2121 :contents-begin 2004 :contents-end 2121 :robust-begin 2004 :robust-end 2119 :post-blank 0 :post-affiliated 2004 :mode section :granularity element :cached t :parent #66# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #67# 0] [[nil nil #68# 0] [nil nil (paragraph (:begin 2170 :end 2462 :contents-begin 2170 :contents-end 2462 :post-blank 0 :post-affiliated 2170 :mode planning :granularity element :cached t :parent #69=(section (:begin 2170 :end 3262 :contents-begin 2170 :contents-end 3261 :robust-begin 2170 :robust-end 3259 :post-blank 1 :post-affiliated 2170 :mode section :granularity element :cached t :parent #68# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #69# 0] #9# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 728 :end 1988 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Set garbage collection threshold\12  ;; From https://www.reddit.com/r/emacs/comments/3kqt6e/2_easy_little_known_steps_to_speed_up_emacs_start/\12\12  (setq gc-cons-threshold-original gc-cons-threshold)\12  (setq gc-cons-threshold (* 1024 1024 100))\12\12  ;; Set file-name-handler-alist\12\12  ;; Also from https://www.reddit.com/r/emacs/comments/3kqt6e/2_easy_little_known_steps_to_speed_up_emacs_start/\12\12  (setq file-name-handler-alist-original file-name-handler-alist)\12  (setq file-name-handler-alist nil)\12\12  ;; Set deferred timer to reset them\12  (run-with-idle-timer\12   5 nil\12   (lambda ()\12     (setq gc-cons-threshold gc-cons-threshold-original)\12     (setq file-name-handler-alist file-name-handler-alist-original)\12     (makunbound 'gc-cons-threshold-original)\12     (makunbound 'file-name-handler-alist-original)\12     ;;  (message \"gc-cons-threshold and file-name-handler-alist restored\")\12     ))\12\12  (defun custom/display-startup-time ()\12    (message \"Emacs loaded in %s with %d garbage collections.\"\12             (format \"%.2f seconds\"\12                     (float-time\12                      (time-subtract after-init-time before-init-time)))\12             gcs-done))\12  (add-hook 'emacs-startup-hook #'custom/display-startup-time)\12\12" :post-blank 1 :post-affiliated 728 :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) -1] [[[[nil nil #12# 0] [nil nil #71=(section (:begin 3309 :end 3798 :contents-begin 3309 :contents-end 3797 :robust-begin 3309 :robust-end 3795 :post-blank 1 :post-affiliated 3309 :mode section :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) 0] #70# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3424 :end 3798 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package expand-region)\12\12  (defun custom-newline-and-indent ()\12  \"Insert an empty line after the current line.\12  Position the cursor at its beginning, according to the current mode.\"\12  (interactive)\12  (move-end-of-line nil)\12  (newline-and-indent))\12\12  ;; Set this globally\12  (global-set-key (kbd \"M-RET\") 'custom-newline-and-indent)\12\12" :post-blank 1 :post-affiliated 3424 :mode nil :granularity element :cached t :parent #71# :org-element--cache-sync-key nil)) 0] [nil nil #73=(section (:begin 3810 :end 6848 :contents-begin 3810 :contents-end 6847 :robust-begin 3810 :robust-end 6845 :post-blank 1 :post-affiliated 3810 :mode section :granularity element :cached t :parent #72# :org-element--cache-sync-key nil)) 0] #72# 0] (paragraph (:begin 3309 :end 3424 :contents-begin 3309 :contents-end 3423 :post-blank 1 :post-affiliated 3309 :mode planning :granularity element :cached t :parent #71# :org-element--cache-sync-key nil)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3895 :end 6848 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package xah-fly-keys\12    :straight (xah-fly-keys :type git :host github :repo \"xahlee/xah-fly-keys\")\12    :config\12    (xah-fly-keys 1)\12    (xah-fly-keys-set-layout \"qwerty\")\12    ;; Use home as activation key. Its recomended to rebind CapsLock to home.\12    (global-set-key (kbd \"<home>\") 'xah-fly-command-mode-activate)\12    ;; This is only for better readability with the 'where-is'-command\12    (when xah-fly-use-control-key\12      (global-set-key (kbd \"<space>\") 'xah-fly-leader-key-map)\12      (global-set-key (kbd \"<f7>\") 'nil))\12    ;; Change isearch from arrow keys to Alt-ijkl\12    (xah-fly--define-keys\12     isearch-mode-map\12     '((\"M-i\" . isearch-ring-retreat)\12       (\"M-k\" . isearch-ring-advance)\12       (\"M-j\" . isearch-repeat-backward)\12       (\"M-l\" . isearch-repeat-forward))\12     :direct)\12    ;; Make ESC do C-g (xah-lee version)\12    (define-key key-translation-map (kbd \"ESC\") (kbd \"C-g\"))\12    ;; unset leader-c, leader-x\12    (define-key xah-fly-leader-key-map (kbd \"x\") 'nil)\12    (define-key xah-fly-leader-key-map (kbd \"c\") 'nil)\12    ;; replace xah-comment-dwim with the original one\12    (define-key xah-fly-insert-map [remap xah-comment-dwim] 'comment-dwim)\12    ;; better scrolling\12    (define-key xah-fly-command-map (kbd \"9\") 'scroll-down-line)\12    (define-key xah-fly-command-map (kbd \"0\") 'scroll-up-line)\12    ;; Delete char normally\12    (define-key xah-fly-command-map (kbd \"d\") 'delete-backward-char)\12    (define-key xah-fly-command-map (kbd \"g\") 'delete-char)\12    ;; expand region\12    (define-key xah-fly-command-map [remap xah-extend-selection] 'er/expand-region)\12    (define-key xah-fly-command-map (kbd \"<f9>\") 'er/contract-region)\12    ;; fill-paragraph instead of reformat-line\12    (define-key xah-fly-command-map [remap xah-reformat-lines] 'fill-paragraph)\12    ;; Join line. Alternative is shrink-whitespace ('w' on command map)\12    (define-key xah-fly-leader-key-map (kbd \"j\") 'join-line)\12    ;; switch window split below and right\12    (define-key xah-fly-command-map (kbd \"4\") 'split-window-right)\12    (define-key xah-fly-leader-key-map (kbd \"4\") 'split-window-below)\12    ;; Switch lines\12    (define-key xah-fly-insert-map (kbd \"s-i\") 'elpy-nav-move-line-or-region-up)\12    (define-key xah-fly-insert-map (kbd \"s-k\") 'elpy-nav-move-line-or-region-down)\12    (define-key xah-fly-insert-map (kbd \"s-j\") 'elpy-nav-indent-shift-left)\12    (define-key xah-fly-insert-map (kbd \"s-l\") 'elpy-nav-indent-shift-right)\12    ;; go to next/previous punct\12    (define-key xah-fly-command-map (kbd \"[\") 'xah-backward-punct)\12    (define-key xah-fly-command-map (kbd \"]\") 'xah-forward-punct)\12\12    ;; insert latex math bracket\12    (defun xah-insert-LaTeX-math-bracket () (interactive) (xah-insert-bracket-pair \"\\\\(\" \"\\\\)\"))\12    (define-key xah-fly-leader-key-map (kbd \"d m\") 'xah-insert-LaTeX-math-bracket)\12    )\12\12    ;; Newline AND indent\12    (define-key global-map [remap newline]  'newline-and-indent)\12\12" :post-blank 1 :post-affiliated 3895 :mode nil :granularity element :cached t :parent #73# :org-element--cache-sync-key nil)) 0] [nil nil #74# 0] #15# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6889 :end 7447 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; When selecting a region and typing something, the region should be deleted/replaced\12  (delete-selection-mode t)\12  ;; Fill column to 99 (from 70 default)\12  (setq-default fill-column 99)\12\12  ;; Previous/next terminal command in python-terminal\12  ;; TODO: build hook for python inferior mode\12  ;; (define-key xah-fly-insert-map (kbd \"M-i\") 'comint-previous-input)\12  ;; (define-key xah-fly-insert-map (kbd \"M-k\") 'comint-next-input)\12\12  ;; Isearch ignore linebreaks, tabs etc.\12  (setq search-whitespace-regexp \"[ \\t\\r\\n]+\")\12\12" :post-blank 0 :post-affiliated 6889 :mode planning :granularity element :cached t :parent #76=(section (:begin 6889 :end 7447 :contents-begin 6889 :contents-end 7447 :robust-begin 6889 :robust-end 7445 :post-blank 0 :post-affiliated 6889 :mode section :granularity element :cached t :parent #74# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #77=(section (:begin 7462 :end 8559 :contents-begin 7462 :contents-end 8558 :robust-begin 7462 :robust-end 8556 :post-blank 1 :post-affiliated 7462 :mode section :granularity element :cached t :parent #75# :org-element--cache-sync-key nil)) 0] #75# 0] #76# 0] (paragraph (:begin 3810 :end 3895 :contents-begin 3810 :contents-end 3895 :post-blank 0 :post-affiliated 3810 :mode planning :granularity element :cached t :parent #73# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2462 :end 3262 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Use the bootstrap code to enable straight\12  (defvar bootstrap-version)\12  (let ((bootstrap-file\12         (expand-file-name \"straight/repos/straight.el/bootstrap.el\" user-emacs-directory))\12        (bootstrap-version 6))\12    (unless (file-exists-p bootstrap-file)\12      (with-current-buffer\12          (url-retrieve-synchronously\12           \"https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el\"\12           'silent 'inhibit-cookies)\12        (goto-char (point-max))\12        (eval-print-last-sexp)))\12    (load bootstrap-file nil 'nomessage))\12\12  ;; Install use-package\12  (straight-use-package 'use-package)\12\12  ;; Use straight as package-manager by default\12  (use-package straight\12             :custom (straight-use-package-by-default t))\12\12" :post-blank 1 :post-affiliated 2462 :mode nil :granularity element :cached t :parent #69# :org-element--cache-sync-key nil)) -1] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7482 :end 8559 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; smartparens-predefinitions\12  (defun def-sp-keybindings ()\12    ;; define keymap\12    (define-prefix-command 'sp-keymap)\12    (define-key xah-fly-leader-key-map (kbd \"x\") sp-keymap)\12    ;; define keys\12    (define-key sp-keymap (kbd \"r\") 'sp-rewrap-sexp)\12    (define-key sp-keymap (kbd \"j\") 'sp-beginning-of-sexp)\12    (define-key sp-keymap (kbd \"l\") 'sp-end-of-sexp)\12    (define-key sp-keymap (kbd \"k\") 'sp-down-sexp)\12    (define-key sp-keymap (kbd \"i\") 'sp-backward-up-sexp)\12    (define-key sp-keymap (kbd \"u\") 'sp-backward-down-sexp)\12    (define-key sp-keymap (kbd \"o\") 'sp-up-sexp)\12    (define-key sp-keymap (kbd \"h\") 'sp-forward-sexp)\12    (define-key sp-keymap (kbd \";\") 'sp-backward-sexp)\12    )\12\12  (use-package smartparens\12  :config\12  ;; (setq sp-autoskip-closing-pair 'always)\12  ;; (setq sp-hybrid-kill-entire-symbol nil)\12  (smartparens-global-mode 1)\12  (def-sp-keybindings)\12  (setq sp-navigate-reindent-after-up-in-string nil)\12\12  ;; disable ' in lisp-modes\12  (sp-with-modes sp-lisp-modes\12    (sp-local-pair \"'\" nil :actions nil))\12  )\12\12" :post-blank 1 :post-affiliated 7482 :mode nil :granularity element :cached t :parent #77# :org-element--cache-sync-key nil)) 0] [nil nil #78# 0] #18# 0] [[nil nil (paragraph (:begin 8601 :end 8644 :contents-begin 8601 :contents-end 8643 :post-blank 1 :post-affiliated 8601 :mode planning :granularity element :cached t :parent #80=(section (:begin 8601 :end 9320 :contents-begin 8601 :contents-end 9319 :robust-begin 8601 :robust-end 9317 :post-blank 1 :post-affiliated 8601 :mode section :granularity element :cached t :parent #78# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #79# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8644 :end 9320 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defalias 'yes-or-no-p 'y-or-n-p)\11;just type for 'y' or 'n' instead of 'yes' and 'no'\12  (setq inhibit-startup-message t)\11; Disable startup-message\12  (scroll-bar-mode -1)        ; Disable visible scrollbar\12  (tool-bar-mode -1)          ; Disable the toolbar\12  (tooltip-mode -1)           ; Disable tooltips\12  (column-number-mode)\11\11\11; Display column number\12  (global-display-line-numbers-mode t)\11; Display line number\12\12  ;; Disable line numbers for some modes\12  (dolist (mode '(org-mode-hook\12\11\11  term-mode-hook\12\11\11  shell-mode-hook\12\11\11  treemacs-mode-hook\12\11\11  eshell-mode-hook))\12    (add-hook mode (lambda () (display-line-numbers-mode 0))))\12\12" :post-blank 1 :post-affiliated 8644 :mode nil :granularity element :cached t :parent #80# :org-element--cache-sync-key nil)) 0] #80# 0] [[[nil nil (paragraph (:begin 9343 :end 9694 :contents-begin 9343 :contents-end 9693 :post-blank 1 :post-affiliated 9343 :mode planning :granularity element :cached t :parent #82=(section (:begin 9343 :end 10289 :contents-begin 9343 :contents-end 10289 :robust-begin 9343 :robust-end 10287 :post-blank 0 :post-affiliated 9343 :mode section :granularity element :cached t :parent #79# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #81# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9694 :end 10289 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Set the variable pitch face\12  (set-face-attribute 'variable-pitch nil :font \"Cantarell\" :weight 'regular)\12\12  ;; Set default font\12  (set-face-attribute 'default nil :font \"Fira Code Retina\")\12\12  ;; Set the fixed pitch face\12  (set-face-attribute 'fixed-pitch nil :font \"Fira Code Retina\")\12\12  ;; Enable fira-code ligatures (combines multiple chars into one visible)\12  (use-package fira-code-mode\12    ;; ligatures you don't want\12    :custom (fira-code-mode-disabled-ligatures '(\"[]\" \"x\"))\12    ;; mode to enable fira-code-mode in prog-mode\12    :hook prog-mode)\12\12" :post-blank 0 :post-affiliated 9694 :mode nil :granularity element :cached t :parent #82# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 10305 :end 10688 :contents-begin 10305 :contents-end 10688 :post-blank 0 :post-affiliated 10305 :mode planning :granularity element :cached t :parent #83=(section (:begin 10305 :end 10788 :contents-begin 10305 :contents-end 10788 :robust-begin 10305 :robust-end 10786 :post-blank 0 :post-affiliated 10305 :mode section :granularity element :cached t :parent #81# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #24# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10688 :end 10788 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package doom-themes\12  :init (load-theme 'doom-moonlight t))\12\12" :post-blank 0 :post-affiliated 10688 :mode nil :granularity element :cached t :parent #83# :org-element--cache-sync-key nil)) 0] #83# 0] #82# 0] [[[[nil nil #85=(section (:begin 10821 :end 11372 :contents-begin 10821 :contents-end 11372 :robust-begin 10821 :robust-end 11370 :post-blank 0 :post-affiliated 10821 :mode section :granularity element :cached t :parent #84# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11125 :end 11372 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package rainbow-delimiters\12  :hook \12  (prog-mode . rainbow-delimiters-mode)\12  (LaTeX-mode . rainbow-delimiters-mode)\12  :config (set-face-attribute 'rainbow-delimiters-depth-3-face nil :foreground \"yellow\"))\12\12" :post-blank 0 :post-affiliated 11125 :mode nil :granularity element :cached t :parent #85# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 10821 :end 11125 :contents-begin 10821 :contents-end 11124 :post-blank 1 :post-affiliated 10821 :mode planning :granularity element :cached t :parent #85# :org-element--cache-sync-key nil)) 0] [[nil nil #88=(section (:begin 11416 :end 11710 :contents-begin 11416 :contents-end 11709 :robust-begin 11416 :robust-end 11707 :post-blank 1 :post-affiliated 11416 :mode section :granularity element :cached t :parent #86# :org-element--cache-sync-key nil)) 0] [nil nil #87# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11416 :end 11710 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(defun highlight-cursor-on () (set-cursor-color \"orange\"))\12(defun highlight-cursor-off () (set-cursor-color \"#82aaff\"))\12\12(add-hook 'xah-fly-command-mode-activate-hook 'highlight-cursor-on)\12(add-hook 'xah-fly-insert-mode-activate-hook  'highlight-cursor-off)\12\12" :post-blank 1 :post-affiliated 11416 :mode planning :granularity element :cached t :parent #88# :org-element--cache-sync-key nil)) 0] #86# 0] [[[nil nil (paragraph (:begin 11730 :end 11945 :contents-begin 11730 :contents-end 11944 :post-blank 1 :post-affiliated 11730 :mode planning :granularity element :cached t :parent #89=(section (:begin 11730 :end 12588 :contents-begin 11730 :contents-end 12587 :robust-begin 11730 :robust-end 12585 :post-blank 1 :post-affiliated 11730 :mode section :granularity element :cached t :parent #87# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12112 :end 12588 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package all-the-icons\12    :if (display-graphic-p))\12\12  (use-package doom-modeline\12    :init (doom-modeline-mode 1)\12    :config\12    (setq doom-modeline-height 15)\12    (setq doom-modeline-minor-modes nil)\12    (setq doom-modeline-buffer-encoding nil)\12    (set-face-attribute 'doom-modeline-evil-normal-state nil :foreground \"orange\")\12    (setq doom-modeline-env-version nil)\12    (setq doom-modeline-buffer-file-name-style 'buffer-name))\12\12" :post-blank 1 :post-affiliated 12112 :mode nil :granularity element :cached t :parent #89# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 11945 :end 12112 :contents-begin 11945 :contents-end 12111 :post-blank 1 :post-affiliated 11945 :mode nil :granularity element :cached t :parent #89# :org-element--cache-sync-key nil)) 0] [[nil nil #91=(section (:begin 12602 :end 13300 :contents-begin 12602 :contents-end 13299 :robust-begin 12602 :robust-end 13297 :post-blank 1 :post-affiliated 12602 :mode section :granularity element :cached t :parent #90# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13092 :end 13300 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package which-key\12    :diminish which-key-mode\11\11; don't show it in modeline\12    :config\12    (which-key-mode)\12    (setq which-key-idle-delay 1))\11; appear after 1 sec\12\12" :post-blank 1 :post-affiliated 13092 :mode nil :granularity element :cached t :parent #91# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 12602 :end 13092 :contents-begin 12602 :contents-end 13091 :post-blank 1 :post-affiliated 12602 :mode planning :granularity element :cached t :parent #91# :org-element--cache-sync-key nil)) 0] #90# 0] #89# 0] #84# 0] (paragraph (:begin 7462 :end 7482 :contents-begin 7462 :contents-end 7482 :post-blank 0 :post-affiliated 7462 :mode planning :granularity element :cached t :parent #77# :org-element--cache-sync-key nil)) -1] [[[[[[[nil nil #92=(section (:begin 13320 :end 14313 :contents-begin 13320 :contents-end 14312 :robust-begin 13320 :robust-end 14310 :post-blank 1 :post-affiliated 13320 :mode section :granularity element :cached t :parent #29# :org-element--cache-sync-key nil)) 0] [nil nil (paragraph (:begin 13701 :end 13849 :contents-begin 13701 :contents-end 13848 :post-blank 1 :post-affiliated 13701 :mode nil :granularity element :cached t :parent #92# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 13320 :end 13701 :contents-begin 13320 :contents-end 13700 :post-blank 1 :post-affiliated 13320 :mode planning :granularity element :cached t :parent #92# :org-element--cache-sync-key nil)) 0] [[nil nil #93# 0] [nil nil (paragraph (:begin 14363 :end 14638 :contents-begin 14363 :contents-end 14637 :post-blank 1 :post-affiliated 14363 :mode planning :granularity element :cached t :parent #94=(section (:begin 14363 :end 14927 :contents-begin 14363 :contents-end 14926 :robust-begin 14363 :robust-end 14924 :post-blank 1 :post-affiliated 14363 :mode section :granularity element :cached t :parent #93# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #94# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13849 :end 14313 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12    (use-package ivy\12      :diminish\12      :config\12      (ivy-mode 1))\12\12    (use-package counsel\12      :after ivy\12      :custom\12      (counsel-linux-app-format-function #'counsel-linux-app-format-function-name-only)\12      :config\12      (counsel-mode 1)\12      ;; Disable M-x starting with '^'\12      (ivy-configure 'counsel-M-x\12\11:initial-input \"\"))\12\12    (use-package ivy-rich\12      :after ivy\12      :init\12      (ivy-rich-mode 1))\12\12" :post-blank 1 :post-affiliated 13849 :mode nil :granularity element :cached t :parent #92# :org-element--cache-sync-key nil)) 0] [[[nil nil #95# 0] [nil nil (paragraph (:begin 14939 :end 15269 :contents-begin 14939 :contents-end 15268 :post-blank 1 :post-affiliated 14939 :mode planning :granularity element :cached t :parent #96=(section (:begin 14939 :end 15759 :contents-begin 14939 :contents-end 15758 :robust-begin 14939 :robust-end 15756 :post-blank 1 :post-affiliated 14939 :mode section :granularity element :cached t :parent #95# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #96# 0] [[nil nil #97# 0] [nil nil (paragraph (:begin 15784 :end 15944 :contents-begin 15784 :contents-end 15944 :post-blank 0 :post-affiliated 15784 :mode planning :granularity element :cached t :parent #98=(section (:begin 15784 :end 16119 :contents-begin 15784 :contents-end 16118 :robust-begin 15784 :robust-end 16116 :post-blank 1 :post-affiliated 15784 :mode section :granularity element :cached t :parent #97# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #98# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15269 :end 15759 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package helpful\12    :commands (helpful-callable helpful-variable helpful-command helpful-key)\12    :custom\12    (counsel-describe-function-function #'helpful-callable)\12    (counsel-describe-variable-function #'helpful-variable)\12    :bind\12    ([remap describe-function] . counsel-describe-function)\12    ([remap describe-command] . helpful-command)\12    ([remap describe-variable] . counsel-describe-variable)\12    ([remap describe-key] . helpful-key))\12\12" :post-blank 1 :post-affiliated 15269 :mode nil :granularity element :cached t :parent #96# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14638 :end 14927 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package ivy-prescient\12    :after counsel\12    :custom\12    (ivy-prescient-enable-filtering nil)\12    :config\12    ;; Uncomment the following line to have sorting remembered across sessions!\12    ;(prescient-persist-mode 1)\12    (ivy-prescient-mode 1))\12\12" :post-blank 1 :post-affiliated 14638 :mode nil :granularity element :cached t :parent #94# :org-element--cache-sync-key nil)) 0] [[[[nil nil #99# 0] [nil nil (paragraph (:begin 16147 :end 16190 :contents-begin 16147 :contents-end 16189 :post-blank 1 :post-affiliated 16147 :mode planning :granularity element :cached t :parent #100=(section (:begin 16147 :end 16416 :contents-begin 16147 :contents-end 16415 :robust-begin 16147 :robust-end 16413 :post-blank 1 :post-affiliated 16147 :mode section :granularity element :cached t :parent #99# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #100# 0] [[nil nil #35# 0] [nil nil #101# 0] (section (:begin 16428 :end 16611 :contents-begin 16428 :contents-end 16610 :robust-begin 16428 :robust-end 16608 :post-blank 1 :post-affiliated 16428 :mode section :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16190 :end 16416 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(defadvice kill-buffer (around kill-buffer-around-advice activate)\12  (let ((buffer-to-kill (ad-get-arg 0)))\12    (if (equal buffer-to-kill \"*scratch*\")\12        (bury-buffer)\12      ad-do-it)))\12\12" :post-blank 1 :post-affiliated 16190 :mode nil :granularity element :cached t :parent #100# :org-element--cache-sync-key nil)) 0] [[[nil nil (paragraph (:begin 16633 :end 16950 :contents-begin 16633 :contents-end 16949 :post-blank 1 :post-affiliated 16633 :mode planning :granularity element :cached t :parent #103=(section (:begin 16633 :end 18720 :contents-begin 16633 :contents-end 18719 :robust-begin 16633 :robust-end 18717 :post-blank 1 :post-affiliated 16633 :mode section :granularity element :cached t :parent #101# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #102# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16950 :end 18720 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun custom/org-font-setup ()\12    ;; Replace list hyphen with dot\12    (font-lock-add-keywords 'org-mode\12                            '((\"^ *\\\\([-]\\\\) \"\12                               (0 (prog1 () (compose-region (match-beginning 1) (match-end1)\"•\"))))))\12    ;; Set faces for heading levels\12    (dolist (face '((org-level-1 . 1.2)\12                    (org-level-2 . 1.1)\12                    (org-level-3 . 1.05)\12                    (org-level-4 . 1.0)\12                    (org-level-5 . 1.1)\12                    (org-level-6 . 1.1)\12                    (org-level-7 . 1.1)\12                    (org-level-8 . 1.1)))\12      (set-face-attribute (car face) nil :font \"Cantarell\" :weight 'regular :height (cdr face)))\12\12    ;; Ensure that anything that should be fixed-pitch in Org files appears that way\12    (set-face-attribute 'org-block nil    :foreground nil :inherit 'fixed-pitch)\12    (set-face-attribute 'org-table nil    :inherit 'fixed-pitch)\12    (set-face-attribute 'org-formula nil  :inherit 'fixed-pitch)\12    (set-face-attribute 'org-code nil     :inherit '(shadow fixed-pitch))\12    (set-face-attribute 'org-table nil    :inherit '(shadow fixed-pitch))\12    (set-face-attribute 'org-verbatim nil :inherit '(shadow fixed-pitch))\12    (set-face-attribute 'org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))\12    (set-face-attribute 'org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))\12    (set-face-attribute 'org-checkbox nil  :inherit 'fixed-pitch)\12    (set-face-attribute 'line-number nil :inherit 'fixed-pitch)\12    (set-face-attribute 'line-number-current-line nil :inherit 'fixed-pitch)\12    ; LaTeX font size\12    (setq org-format-latex-options (plist-put org-format-latex-options :scale 1.5)))\12\12" :post-blank 1 :post-affiliated 16950 :mode nil :granularity element :cached t :parent #103# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 18740 :end 18788 :contents-begin 18740 :contents-end 18788 :post-blank 0 :post-affiliated 18740 :mode planning :granularity element :cached t :parent #104=(section (:begin 18740 :end 18928 :contents-begin 18740 :contents-end 18927 :robust-begin 18740 :robust-end 18925 :post-blank 1 :post-affiliated 18740 :mode section :granularity element :cached t :parent #102# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #38# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18788 :end 18928 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun org-cycle-current-headline ()\12    (interactive)\12    (outline-previous-heading)\12    (org-cycle))\12\12" :post-blank 1 :post-affiliated 18788 :mode nil :granularity element :cached t :parent #104# :org-element--cache-sync-key nil)) 0] #104# 0] #103# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15944 :end 16119 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package highlight-indentation\12    :hook prog-mode\12    :config\12    (set-face-background 'highlight-indentation-face \"#292C44\")\12    )\12\12" :post-blank 1 :post-affiliated 15944 :mode nil :granularity element :cached t :parent #98# :org-element--cache-sync-key nil)) 0] [[[[[nil nil (paragraph (:begin 18945 :end 19253 :contents-begin 18945 :contents-end 19252 :post-blank 1 :post-affiliated 18945 :mode planning :granularity element :cached t :parent #106=(section (:begin 18945 :end 19693 :contents-begin 18945 :contents-end 19692 :robust-begin 18945 :robust-end 19690 :post-blank 1 :post-affiliated 18945 :mode section :granularity element :cached t :parent #38# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #105# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19253 :end 19693 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun custom/org-mode-setup ()\12    (org-indent-mode)\12    (variable-pitch-mode 1)\12    (visual-line-mode 1)\12    )\12\12  (use-package org\12    ;; :straight (:type built-in)\12    :commands (org-capture org-agenda)\12    :hook (org-mode . custom/org-mode-setup)\12    :custom (org-ellipsis \" ▾\")\12    :config\12    (custom/org-font-setup)\12    (define-key org-mode-map (kbd \"C-c t\") 'org-cycle-current-headline)\12    )\12\12\12" :post-blank 1 :post-affiliated 19253 :mode nil :granularity element :cached t :parent #106# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 19720 :end 19979 :contents-begin 19720 :contents-end 19978 :post-blank 1 :post-affiliated 19720 :mode planning :granularity element :cached t :parent #108=(section (:begin 19720 :end 20151 :contents-begin 19720 :contents-end 20151 :robust-begin 19720 :robust-end 20149 :post-blank 0 :post-affiliated 19720 :mode section :granularity element :cached t :parent #105# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #107# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19979 :end 20151 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package org-bullets\12    :hook (org-mode . org-bullets-mode)\12    :custom (org-bullets-bullet-list '(\"◉\" \"○\" \"●\" \"○\" \"●\" \"○\" \"●\")))\12\12" :post-blank 0 :post-affiliated 19979 :mode nil :granularity element :cached t :parent #108# :org-element--cache-sync-key nil)) 0] #108# 0] [[[nil nil (paragraph (:begin 20181 :end 20461 :contents-begin 20181 :contents-end 20460 :post-blank 1 :post-affiliated 20181 :mode planning :granularity element :cached t :parent #110=(section (:begin 20181 :end 20704 :contents-begin 20181 :contents-end 20703 :robust-begin 20181 :robust-end 20701 :post-blank 1 :post-affiliated 20181 :mode section :granularity element :cached t :parent #107# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #109# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 20461 :end 20704 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (with-eval-after-load 'org\12    (org-babel-do-load-languages\12        'org-babel-load-languages\12        '((emacs-lisp . t)\12          (python . t)))\12\12    (push '(\"conf-unix\" . conf-unix) org-src-lang-modes))\12\12" :post-blank 1 :post-affiliated 20461 :mode nil :granularity element :cached t :parent #110# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 20740 :end 21071 :contents-begin 20740 :contents-end 21070 :post-blank 1 :post-affiliated 20740 :mode planning :granularity element :cached t :parent #112=(section (:begin 20740 :end 21564 :contents-begin 20740 :contents-end 21564 :robust-begin 20740 :robust-end 21562 :post-blank 0 :post-affiliated 20740 :mode section :granularity element :cached t :parent #109# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #111# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 21071 :end 21564 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Automatically tangle our Emacs.org config file when we save it\12  (defun custom/org-babel-tangle-config ()\12    (when (string-equal (file-name-directory (buffer-file-name))\12                        (expand-file-name user-emacs-directory))\12      ;; Dynamic scoping to the rescue\12      (let ((org-confirm-babel-evaluate nil))\12        (org-babel-tangle))))\12\12  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'custom/org-babel-tangle-config)))\12\12" :post-blank 0 :post-affiliated 21071 :mode nil :granularity element :cached t :parent #112# :org-element--cache-sync-key nil)) 0] #112# 0] #110# 0] [[[[nil nil (paragraph (:begin 21573 :end 21604 :contents-begin 21573 :contents-end 21604 :post-blank 0 :post-affiliated 21573 :mode planning :granularity element :cached t :parent #113=(section (:begin 21573 :end 21695 :contents-begin 21573 :contents-end 21695 :robust-begin 21573 :robust-end 21693 :post-blank 0 :post-affiliated 21573 :mode section :granularity element :cached t :parent #111# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #46# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 21604 :end 21695 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq browse-url-browser-function #'browse-url-firefox)\12" :post-blank 0 :post-affiliated 21604 :mode nil :granularity element :cached t :parent #113# :org-element--cache-sync-key nil)) 0] [[nil nil #115=(section (:begin 21722 :end 22287 :contents-begin 21722 :contents-end 22286 :robust-begin 21722 :robust-end 22284 :post-blank 1 :post-affiliated 21722 :mode section :granularity element :cached t :parent #114# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 21766 :end 22287 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dired\12    :straight (:type built-in)\12    :commands (dired dired-jump)\12    :custom ((dired-listing-switches \"-agho --group-directories-first\"))\12    :bind (:map dired-mode-map\12\11\11(\"W\" . wdired-change-to-wdired-mode)))\12\12  ;; Prevents dired from opening mutliple dired buffers, but only one\12  (use-package dired-single\12    :commands (dired dired-jump))\12\12  ;; Use fancy icons also in dired\12  (use-package all-the-icons-dired\12    :hook (dired-mode . all-the-icons-dired-mode))\12\12" :post-blank 1 :post-affiliated 21766 :mode nil :granularity element :cached t :parent #115# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 21722 :end 21766 :contents-begin 21722 :contents-end 21766 :post-blank 0 :post-affiliated 21722 :mode planning :granularity element :cached t :parent #115# :org-element--cache-sync-key nil)) 0] #114# 0] [[[nil nil #117=(section (:begin 22309 :end 23201 :contents-begin 22309 :contents-end 23200 :robust-begin 22309 :robust-end 23198 :post-blank 1 :post-affiliated 22309 :mode section :granularity element :cached t :parent #116# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22690 :end 23201 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; NOTE: If you want to move everything out of the ~/.emacs.d folder\12  ;; reliably, set `user-emacs-directory` before loading no-littering!\12  ;(setq user-emacs-directory \"~/.cache/emacs\")\12\12  (use-package no-littering\12  ;; no-littering doesn't set this by default so we must place\12  ;; auto save files in the same path as it uses for sessions\12  :config\12  (setq auto-save-file-name-transforms\12        `((\".*\" ,(no-littering-expand-var-file-name \"auto-save/\") t)))\12        )\12\12\12" :post-blank 1 :post-affiliated 22690 :mode nil :granularity element :cached t :parent #117# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 22309 :end 22690 :contents-begin 22309 :contents-end 22689 :post-blank 1 :post-affiliated 22309 :mode planning :granularity element :cached t :parent #117# :org-element--cache-sync-key nil)) 0] [[nil nil #119=(section (:begin 23212 :end 23525 :contents-begin 23212 :contents-end 23525 :robust-begin 23212 :robust-end 23523 :post-blank 0 :post-affiliated 23212 :mode section :granularity element :cached t :parent #118# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23375 :end 23525 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package yasnippet\12    :init (yas-global-mode 1))\12  \12  (use-package yasnippet-snippets\12    :after yasnippet)\12\12" :post-blank 0 :post-affiliated 23375 :mode nil :granularity element :cached t :parent #119# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 23212 :end 23375 :contents-begin 23212 :contents-end 23375 :post-blank 0 :post-affiliated 23212 :mode planning :granularity element :cached t :parent #119# :org-element--cache-sync-key nil)) 0] #118# 0] #116# 0] #113# 0] #106# 0] [[[[nil nil #121=(section (:begin 23547 :end 23783 :contents-begin 23547 :contents-end 23782 :robust-begin 23547 :robust-end 23780 :post-blank 1 :post-affiliated 23547 :mode section :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23648 :end 23783 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Make gc pauses faster by decreasing the threshold.\12  (setq gc-cons-threshold (* 2 1024 1024))\12\12" :post-blank 1 :post-affiliated 23648 :mode nil :granularity element :cached t :parent #121# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 23547 :end 23648 :contents-begin 23547 :contents-end 23648 :post-blank 0 :post-affiliated 23547 :mode planning :granularity element :cached t :parent #121# :org-element--cache-sync-key nil)) 0] [[[nil nil #122# 0] [nil nil (paragraph (:begin 23816 :end 24029 :contents-begin 23816 :contents-end 24028 :post-blank 1 :post-affiliated 23816 :mode planning :granularity element :cached t :parent #123=(section (:begin 23816 :end 24206 :contents-begin 23816 :contents-end 24205 :robust-begin 23816 :robust-end 24203 :post-blank 1 :post-affiliated 23816 :mode section :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #123# 0] [nil nil #55# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 24029 :end 24206 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package flycheck\12    :hook prog-mode\12    :init (global-flycheck-mode)\12    :custom\12    (flycheck-flake8-maximum-line-length 100)\12    )\12\12" :post-blank 1 :post-affiliated 24029 :mode nil :granularity element :cached t :parent #123# :org-element--cache-sync-key nil)) -1] #53# 1] [[[[[nil nil #125=(section (:begin 24230 :end 26890 :contents-begin 24230 :contents-end 26890 :robust-begin 24230 :robust-end 26888 :post-blank 0 :post-affiliated 24230 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #124#)) 0] nil (paragraph (:begin 24230 :end 24415 :contents-begin 24230 :contents-end 24414 :post-blank 1 :post-affiliated 24230 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #125#)) -1] [[nil nil #126# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 26900 :end 29372 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun def-LaTeX-keybindings ()\12    ;; define keymap\12    (define-prefix-command 'LaTeX-keymap)\12    (define-key xah-fly-leader-key-map (kbd \"c\") LaTeX-keymap)\12    ;; define keys\12    (define-key LaTeX-keymap (kbd \"q\") 'LaTeX-fill-paragraph)\12    (define-key LaTeX-keymap (kbd \"c\") 'TeX-command-master)\12    (define-key LaTeX-keymap (kbd \"v\") 'TeX-view)\12    (define-key LaTeX-keymap (kbd \"s\") 'LaTeX-section)\12    (define-key LaTeX-keymap (kbd \"e\") 'LaTeX-environment)\12    (define-key LaTeX-keymap (kbd \".\") 'LaTeX-mark-environment)\12    (define-key LaTeX-keymap (kbd \"j\") 'LaTeX-insert-item)\12    (define-key LaTeX-keymap (kbd \"r\") 'reftex-hyperref-autoref)\12    (define-key LaTeX-keymap (kbd \"p\") 'reftex-citep)\12    (define-key LaTeX-keymap (kbd \"t\") 'reftex-toc)\12    ;; Unset insert-quote because it destroys smartparens work\12    ;; (define-key TeX-mode-map (kbd \"\\\"\") nil)\12    )\12\12  ;; (use-package tikz\12  ;; :config\12  ;; (setq tikz-viewer \"PDF Tools\"))\12\12  ;; maybe the following could be updated with the init from\12  ;; https://github.com/jwiegley/use-package/issues/379\12\12  (use-package tex-mode \11\11\11; auctex\12    :hook\12    (LaTeX-mode . def-LaTeX-keybindings)\12    (LaTeX-mode . company-mode)\12    (LaTeX-mode . flyspell-mode)\12    ;; Use orgtbl-mode for creating tables\12    ;; (LaTeX-mode . orgtbl-mode)\12    :mode \"\\\\.tex\\\\'\"\12    :config\12    (add-hook 'LaTeX-mode-hook 'flyspell-buffer)\12    (add-hook 'LaTeX-mode-hook 'turn-on-auto-fill)\12    (add-hook 'LaTeX-mode-hook (lambda () (set-fill-column 99)))\12    ;; (load \"auctex.el\" nil t t)\12    (setq TeX-parse-self t)\12    (setq TeX-save-query nil)\12    (setq TeX-master \"./main\")\12    (setq TeX-PDF-mode t)\12    ;; Use smartparens config for latex\12    (require 'smartparens-latex)\12    ;; Use pdf-tools to open PDF files\12    (setq TeX-view-program-selection '((output-pdf \"PDF Tools\")) TeX-source-correlate-start-server t)\12    ;; Revert pdf buffer after compiling document\12    (add-hook 'TeX-after-compilation-finished-functions #'TeX-revert-document-buffer)\12    ;; Reftex things\12    (require 'reftex)\12    (add-hook 'LaTeX-mode-hook 'reftex-parse-all)\12    (setq reftex-plug-into-AUCTeX t)\12    (add-to-list 'reftex-default-bibliography \"../inputs/references.bib\")\12    (add-to-list 'reftex-default-bibliography \"references.bib\")\12    (setq TeX-source-correlate-mode t)\12    (setq TeX-source-correlate-start-server t)\12    ;; ('(setcar (cdr (assoc 'output-pdf TeX-view-program-selection)) \"Okular\"))\12    )\12\12" :post-blank 0 :post-affiliated 26900 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #127=(section (:begin 26900 :end 29372 :contents-begin 26900 :contents-end 29372 :robust-begin 26900 :robust-end 29370 :post-blank 0 :post-affiliated 26900 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #126#)))) 0] #127# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 24415 :end 26890 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Use doctest functionality\12  (defun elpy-doctest-buffer (&optional arg)\12    \"Send the active buffer to the Python shell and run any doctests.\12          With the prefix argument it will run the doctest in verbose mode\"\12    (interactive \"P\")\12    (python-shell-send-buffer)\12    (python-shell-send-string \"import doctest\")\12    (if arg\12        (python-shell-send-string \"doctest.testmod(verbose=True)\")\12      (python-shell-send-string \"doctest.testmod(verbose=False)\")))\12\12  ;; elpy-predefinitions\12  (defun def-elpy-keybindings ()\12    ;; elpy-keymap\12    (define-key xah-fly-leader-key-map (kbd \"c\") 'nil)\12    ;; define keys\12    (define-key xah-fly-leader-key-map (kbd \"c f\") 'elpy-folding-toggle-at-point)\12    (define-key xah-fly-leader-key-map (kbd \"c m\") 'python-mark-defun)\12    (define-key xah-fly-leader-key-map (kbd \"c k\") 'elpy-shell-kill)\12    (define-key xah-fly-leader-key-map (kbd \"c c\") 'elpy-shell-send-region-or-buffer)\12    (define-key xah-fly-leader-key-map (kbd \"c t\") 'elpy-doctest-buffer)\12    )\12\12  ;;  Using elpy as development environment\12  (use-package elpy\12    :init\12    (elpy-enable)\12    :hook\12    (elpy-mode . def-elpy-keybindings)\12    (elpy-mode . hs-minor-mode)\12    (elpy-mode . flyspell-prog-mode)\12    (elpy-mode . (lambda () (set-fill-column 99)))\12    (elpy-mode . flycheck-mode)\12    :custom\12    (elpy-rpc-python-command \"python3\")  ; use python3\12    (python-shell-interpreter \"python3\") ; use python3\12    (elpy-code-formatter 'autopep8)\12    (elpy-shell-starting-directory 'current-directory) ;; default is 'project-root\12    (elpy-shell-echo-input nil)\12    (python-shell-completion-native-enable nil)\12    :config\12    ;; elpy uses flymake by default, I want to use flycheck instead\12    (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))\12    ;; enable folding module\12    ;; (add-to-list 'elpy-modules 'elpy-modules-folding)\12    ;; (setq elpy-modules (append elpy-modules 'elpy-module-folding nil))\12    ;; activate virtual environment\12    (with-eval-after-load 'elpy (pyvenv-activate \"~/.emacs.d/elpy/rpc-venv\"))\12    ;; Use smartparens python config\12    ;; (require 'smartparens-python)\12    )\12\12  (use-package py-autopep8\12    :hook (python-mode . py-autopep8-enable-on-save)\12    :custom\12    (py-autopep8-options '(\"--max-line-length=100\" \"--aggressive\"))\12    )\12\12  ;; (define-key python-mode-map (kbd \"M->\") 'elpy-nav-indent-shift-right)\12  ;; (define-key python-mode-map (kbd \"M-<\") 'elpy-nav-indent-shift-left)\12\12" :post-blank 0 :post-affiliated 24415 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #125#)) 0] [[nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 29378 :end 29470 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (use-package ess\12  ;;  :mode (\"\\\\.r\\\\'\" . r-mode))\12\12" :post-blank 1 :post-affiliated 29378 :mode planning :granularity element :cached t :parent #129=(section (:begin 29378 :end 29470 :contents-begin 29378 :contents-end 29469 :robust-begin 29378 :robust-end 29467 :post-blank 1 :post-affiliated 29378 :mode section :granularity element :cached t :parent #128# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #129# 1] [[nil nil #131=(section (:begin 29487 :end 30304 :contents-begin 29487 :contents-end 30303 :robust-begin 29487 :robust-end 30301 :post-blank 1 :post-affiliated 29487 :mode section :granularity element :cached t :parent #130# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 29849 :end 30304 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package company\12    :after lsp-mode\12    :hook (lsp-mode . company-mode)\12    :bind (:map company-active-map\12           (\"<tab>\" . company-complete-selection))\12          (:map lsp-mode-map\12           (\"<tab>\" . company-indent-or-complete-common))\12    :custom\12    (company-minimum-prefix-length 1)\12    (company-idle-delay 0.0))\12\12\12  (use-package company-auctex\12    :hook LaTeX\12    :config\12    (company-auctex-init))\12\12" :post-blank 1 :post-affiliated 29849 :mode nil :granularity element :cached t :parent #131# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 29487 :end 29849 :contents-begin 29487 :contents-end 29847 :post-blank 2 :post-affiliated 29487 :mode planning :granularity element :cached t :parent #131# :org-element--cache-sync-key nil)) 0] #130# 0] #128# 0] [[[nil nil #133=(section (:begin 30314 :end 30656 :contents-begin 30314 :contents-end 30655 :robust-begin 30314 :robust-end 30653 :post-blank 1 :post-affiliated 30314 :mode section :granularity element :cached t :parent #132# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 30473 :end 30656 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package magit\12    :commands magit-status\12    :custom\12    (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-v1))\12\12" :post-blank 1 :post-affiliated 30473 :mode nil :granularity element :cached t :parent #133# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 30314 :end 30473 :contents-begin 30314 :contents-end 30472 :post-blank 1 :post-affiliated 30314 :mode planning :granularity element :cached t :parent #133# :org-element--cache-sync-key nil)) 0] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 30668 :end 30845 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package pdf-tools\12  :mode (\"\\\\.pdf\\\\'\" . pdf-view-mode)\12  :config\12  (pdf-tools-install t)\12  (setq pdf-view-midnight-minor-mode t)\12  )\12\12" :post-blank 1 :post-affiliated 30668 :mode planning :granularity element :cached t :parent #135=(section (:begin 30668 :end 30845 :contents-begin 30668 :contents-end 30844 :robust-begin 30668 :robust-end 30842 :post-blank 1 :post-affiliated 30668 :mode section :granularity element :cached t :parent #134# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #135# 1] #134# 0] #132# -1] #124# 1] #120# 0] #29# 0] nil nil 0] org-element--cache-compare)))